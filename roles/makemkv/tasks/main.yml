---
#
# Copyright (c) 2017 Jacques-Philippe JUBENOT
# license: Licensed under CC BY 3.0. All rights reserved.
#
#
# Role MakeMKV
#
# MakeMKV Compilation
# https://linuxconfig.org/how-to-install-makemkv-on-fedora-linux
#
# Check MakeMKV exist
- name: Verify if MakeMKV exist
  ansible.builtin.stat:
    path: /usr/bin/makemkv
  register: makemkvexist
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Create Folder to Compile
- name: Create Folder to Compile
  ansible.builtin.file:
     path: "/tmp/MakeMKV"
     state: directory
     mode: '0775'
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Download lastest version on www.makemkv.com
- name: Downloading MakeMKV OSS
  get_url:
     url: http://www.makemkv.com/download/{{ MakeMKV_OSS }}.tar.gz
     dest: "/tmp/MakeMKV"
     mode: '0644'
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Download lastest version on www.makemkv.com
- name: Downloading MakeMKV BIN
  get_url:
     url: http://www.makemkv.com/download/{{ MakeMKV_BIN }}.tar.gz
     dest: "/tmp/MakeMKV"
     mode: '0644'
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Uncompress BIN Files
- name: Uncompress BIN Achive
  ansible.builtin.unarchive:
     src: "/tmp/MakeMKV/{{ MakeMKV_BIN }}.tar.gz"
     dest: "/tmp/MakeMKV"
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Uncompress OSS Files
- name: Uncompress OSS Achive
  ansible.builtin.unarchive:
     src: "/tmp/MakeMKV/{{ MakeMKV_OSS }}.tar.gz"
     dest: "/tmp/MakeMKV"
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Compile MakeMKV OSS
- name: Configure
  ansible.builtin.shell:
    cmd: cd /tmp/MakeMKV/{{ MakeMKV_OSS }} && ./configure
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Patch OSS libffabi/src/ffabi.c file to prevent compile error
# Take a look There : https://forum.makemkv.com/forum/viewtopic.php?f=3&p=132993
- name: Patch OSS libffabi/src/ffabi.c file to prevent compile error
  ansible.builtin.replace:
     path: /tmp/MakeMKV/{{ MakeMKV_OSS }}/libffabi/src/ffabi.c
     regexp: 'av_mallocz_array'
     replace: 'av_calloc'
     backup: true
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

- name: Compile MakeMKV OSS
  ansible.builtin.shell:
    cmd: cd /tmp/MakeMKV/{{ MakeMKV_OSS }} && echo -e "\nq\nyes" | make
  args:
     executable: /bin/bash
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

- name: Make Install
  community.general.make:
     chdir: "/tmp/MakeMKV/{{ MakeMKV_OSS }}"
     target: install
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Compile MakeMKV BIN
- name: Create Folder BIN to Compile
  ansible.builtin.file:
     path: "/tmp/MakeMKV/{{ MakeMKV_BIN }}/tmp"
     state: directory
     mode: '0775'
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

- name: Create File to Compile
  ansible.builtin.file:
     path: "/tmp/MakeMKV/{{ MakeMKV_BIN }}/tmp/eula_accepted"
     state: touch
     mode: '0775'
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

- name: Compile MakeMKV BIN
  ansible.builtin.shell:
    cmd: cd /tmp/MakeMKV/{{ MakeMKV_BIN }} && make
  args:
     executable: /bin/bash
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

- name: Make Install
  community.general.make:
     chdir: "/tmp/MakeMKV/{{ MakeMKV_BIN }}"
     target: install
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Clean MakeMKV-Build
- name: Delete MakeMKV Folder
  ansible.builtin.file:
     path: "/tmp/MakeMKV"
     state: absent
  when: makemkvexist.stat.exists == False
  tags:
    - mkmkv
    - mixhbmk
    - onlymkmkv

# Check libmmbd.so.0 x64 exist
- name: Verify if libmmbd.so.0 x64 exist
  ansible.builtin.stat:
    path: /usr/lib64/libmmbd.so.0
  register: limmbd64exist
  tags:
    - mkmkv
    - mixhbmk
    - symlinkvlc

# Create Symbolic Link x64 for VLC
- name: Create Symbolic Link x64 for VLC - libaacs
  ansible.builtin.file:
    src: /usr/lib64/libmmbd.so.0
    dest: /usr/lib64/libaacs.so.0
    owner: root
    group: root
    state: link
  when: limmbd64exist.stat.exists
  tags:
    - mkmkv
    - mixhbmk
    - symlinkvlc

# Create Symbolic Link x64 for VLC
- name: Create Symbolic Link x64 for VLC - libaacs
  ansible.builtin.file:
    src: /usr/lib64/libmmbd.so.0
    dest: /usr/lib64/libbdplus.so.0
    owner: root
    group: root
    state: link
  when: limmbd64exist.stat.exists
  tags:
    - mkmkv
    - mixhbmk
    - symlinkvlc

# Check libmmbd.so.0 x32 exist
- name: Verify if libmmbd.so.0 x32 exist
  ansible.builtin.stat:
    path=/usr/lib/libmmbd.so.0
  register: limmbd32exist
  tags:
    - mkmkv
    - mixhbmk
    - symlinkvlc

# Create Symbolic Link x32 for VLC
- name: Create Symbolic Link x32 for VLC - libaacs
  ansible.builtin.file:
    src: /usr/lib/libmmbd.so.0
    dest: /usr/lib/libaacs.so.0
    owner: root
    group: root
    state: link
  when: limmbd32exist.stat.exists
  tags:
    - mkmkv
    - mixhbmk
    - symlinkvlc

# Create Symbolic Link x32 for VLC
- name: Create Symbolic Link x32 for VLC - libaacs
  ansible.builtin.file:
    src: /usr/lib/libmmbd.so.0
    dest: /usr/lib/libbdplus.so.0
    owner: root
    group: root
    state: link
  when: limmbd32exist.stat.exists
  tags:
    - mkmkv
    - mixhbmk
    - symlinkvlc
